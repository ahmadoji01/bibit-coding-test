// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "go_bibit_test/domain"

	mock "github.com/stretchr/testify/mock"
)

// MovieUsecase is an autogenerated mock type for the MovieUsecase type
type MovieUsecase struct {
	mock.Mock
}

// Fetch provides a mock function with given fields: query, pagination
func (_m *MovieUsecase) Fetch(query string, pagination int64) ([]domain.Movie, error) {
	ret := _m.Called(query, pagination)

	var r0 []domain.Movie
	if rf, ok := ret.Get(0).(func(string, int64) []domain.Movie); ok {
		r0 = rf(query, pagination)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Movie)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int64) error); ok {
		r1 = rf(query, pagination)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: id
func (_m *MovieUsecase) GetByID(id string) (domain.Movie, error) {
	ret := _m.Called(id)

	var r0 domain.Movie
	if rf, ok := ret.Get(0).(func(string) domain.Movie); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.Movie)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
